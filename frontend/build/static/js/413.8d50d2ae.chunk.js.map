{"version":3,"file":"static/js/413.8d50d2ae.chunk.js","mappings":"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","sources":["docs/pages/UpdateDoc.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\n\r\nconst UpdateDoc = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { loading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedDoc, setLoadedDoc] = useState();\r\n  const docId = useParams().docId;\r\n  const history = useHistory();\r\n\r\n  // Form state management using the useForm hook\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchDoc = async () => {\r\n      try {\r\n        // Fetch the document data using the docId from the URL\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/docs/${docId}`\r\n        );\r\n        setLoadedDoc(responseData.doc);\r\n\r\n        // Set the initial form data and validity based on the fetched document\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.doc.title,\r\n              isValid: true\r\n            },\r\n            description: {\r\n              value: responseData.doc.description,\r\n              isValid: true\r\n            }\r\n          },\r\n          true\r\n        );\r\n      } catch (err) {}\r\n    };\r\n    fetchDoc();\r\n  }, [sendRequest, docId, setFormData]);\r\n\r\n  const docUpdateSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      // Send a PATCH request to update the document\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_ASSET_URL}/docs/${docId}`,\r\n        'PATCH',\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + auth.token\r\n        }\r\n      );\r\n      // Redirect to the document list after successful update\r\n      history.push('/' + auth.userId + '/docs');\r\n    } catch (err) {}\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedDoc && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find doc!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!loading && loadedDoc && (\r\n        <form className=\"doc-form\" onSubmit={docUpdateSubmitHandler}>\r\n          {/* Input components for title and description */}\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedDoc.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (min. 5 characters).\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedDoc.description}\r\n            initialValid={true}\r\n          />\r\n          {/* Button to submit the form */}\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE doc\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateDoc;\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if (!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            };\r\n\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    // Function to handle input changes\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id\r\n        });\r\n    }, []);\r\n\r\n    // Function to set form data\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        });\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","_useHttpClient","useHttpClient","loading","error","sendRequest","clearError","_useState","useState","_useState2","_slicedToArray","loadedDoc","setLoadedDoc","docId","useParams","history","useHistory","_useForm","useForm","title","value","isValid","description","_useForm2","formState","inputHandler","setFormData","useEffect","fetchDoc","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","wrap","_context","prev","next","concat","process","sent","doc","t0","stop","apply","arguments","docUpdateSubmitHandler","_ref2","_callee2","event","_context2","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","_x","_jsx","className","children","LoadingSpinner","_jsxs","_Fragment","ErrorModal","onClear","onSubmit","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","Card","inputReducer","state","action","_objectSpread","val","validate","isTouched","props","_useReducer","useReducer","_useReducer2","inputState","dispatch","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","formReducer","formIsValid","inputId","_defineProperty","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","_step","_iterator","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","_e2","_createForOfIteratorHelper","validator","trim","test"],"sourceRoot":""}