{"version":3,"file":"static/js/361.95d35dbb.chunk.js","mappings":"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","sources":["shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/ImageUpload.js","user/pages/Auth.js"],"sourcesContent":["import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if (!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            };\r\n\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    // Function to handle input changes\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id\r\n        });\r\n    }, []);\r\n\r\n    // Function to set form data\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        });\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control center\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport './Auth.css';\r\nimport { useState, useContext } from 'react';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\n\r\nconst Auth = () => {\r\n  // Context for authentication\r\n  const auth = useContext(AuthContext);\r\n\r\n  // State for login/signup mode\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n\r\n  // Custom HTTP hook for making API requests\r\n  const { loading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  // Form hook for managing form state and input validation\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  // Switch between login and signup modes\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: '',\r\n          isValid: false},\r\n        image:{\r\n          value: null,\r\n          isValid: false\r\n        }},\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  // Submit the login/signup form\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        // Send a POST request to log in the user\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n          'POST',\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        );\r\n\r\n        // Log in the user and update the authentication context\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {\r\n        // Handle any errors that occur during the login request\r\n      }\r\n    } else {\r\n      try {\r\n\r\n        const formData = new FormData();\r\n        formData.append('email', formState.inputs.email.value);\r\n        formData.append('password', formState.inputs.password.value);\r\n        formData.append('name', formState.inputs.name.value);\r\n        formData.append('image', formState.inputs.image.value);\r\n\r\n        // Send a POST request to sign up the user\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n          'POST',\r\n          formData\r\n        );\r\n\r\n        // Log in the user and update the authentication context\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {\r\n        // Handle any errors that occur during the signup request\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {loading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && <ImageUpload id=\"image\" onInput={inputHandler}/>}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 5 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? 'Login' : 'Signup'}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          Switch to {isLoginMode ? 'Signup' : 'Login'}!\r\n        </Button>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["inputReducer","state","action","type","_objectSpread","value","val","isValid","validate","validators","isTouched","props","_useReducer","useReducer","initialValue","initialValid","_useReducer2","_slicedToArray","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","_jsx","placeholder","onChange","onBlur","rows","_jsxs","className","concat","children","htmlFor","label","errorText","style","formReducer","formIsValid","inputId","inputs","_defineProperty","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","_step","_iterator","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_createForOfIteratorHelper","validator","trim","test","_useState","useState","_useState2","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","Button","onClick","current","click","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","_useHttpClient","useHttpClient","loading","error","sendRequest","clearError","_useForm","email","password","_useForm2","inputHandler","setFormData","authSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","formData","_responseData","wrap","_context","prev","preventDefault","process","JSON","stringify","sent","login","userId","token","t0","FormData","append","name","image","t1","stop","_x","apply","arguments","_Fragment","ErrorModal","onClear","Card","LoadingSpinner","asOverlay","onSubmit","Input","ImageUpload","disabled","inverse","undefined","prevMode"],"sourceRoot":""}