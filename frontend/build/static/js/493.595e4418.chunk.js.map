{"version":3,"file":"static/js/493.595e4418.chunk.js","mappings":"sRAoFA,EAxEe,WACb,IAAMA,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GAClBC,GAAUC,EAAAA,EAAAA,MAChBC,GAAoDC,EAAAA,EAAAA,KAA5CC,EAAWF,EAAXE,YAAaC,EAAKH,EAALG,MAAOC,EAAOJ,EAAPI,QAASC,EAAUL,EAAVK,WAErCC,GAAkCC,EAAAA,EAAAA,GAChC,CACEC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,YAAa,CACXF,MAAO,GACPC,SAAS,KAGb,GACDE,GAAAC,EAAAA,EAAAA,GAAAP,EAAA,GAZMQ,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAcxBI,EAAgB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAK,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZ,OAAvBJ,EAAMK,iBAAiBH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGfxB,EACJ0B,iCACA,OACAC,KAAKC,UAAU,CACbtB,MAAOM,EAAUiB,OAAOvB,MAAMC,MAC9BE,YAAaG,EAAUiB,OAAOpB,YAAYF,QAE5C,CACE,eAAgB,mBAChBuB,cAAe,UAAYrC,EAAKsC,QAElC,KAAD,EAEDnC,EAAQoC,KAAK,IAADC,OAAKxC,EAAKyC,OAAM,UAASZ,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAa,GAAAb,EAAA,iCAAAA,EAAAc,OAAA,GAAAjB,EAAA,kBAIxC,gBArBqBkB,GAAA,OAAAtB,EAAAuB,MAAA,KAAAC,UAAA,KAuBtB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAC3C,MAAOA,EAAO4C,QAAS1C,KACnCqC,EAAAA,EAAAA,MAAA,QAAMM,UAAU,WAAWC,SAAUjC,EAAiB4B,SAAA,CACnDxC,IAAWyC,EAAAA,EAAAA,KAACK,EAAAA,EAAc,CAACC,WAAS,KACrCN,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CACJC,GAAG,QACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,EAACC,EAAAA,EAAAA,OACbC,UAAU,8BACVC,QAAS7C,KAEX8B,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CACJC,GAAG,cACHC,QAAQ,WACRE,MAAM,cACNC,WAAY,EAACI,EAAAA,EAAAA,IAAoB,IACjCF,UAAU,4DACVC,QAAS7C,KAEX8B,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACP,KAAK,SAASQ,UAAWjD,EAAUJ,QAAQkC,SAAC,kBAM5D,C,uGC7EMoB,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOX,MACb,IAAK,SACH,OAAAY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKF,GAAK,IACRxD,MAAOyD,EAAOE,IACd1D,SAAS2D,EAAAA,EAAAA,IAASH,EAAOE,IAAKF,EAAOT,cAEzC,IAAK,QACH,OAAAU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKF,GAAK,IACRK,WAAW,IAGf,QACE,OAAOL,EAEb,EA8DA,EA5Dc,SAAAM,GACZ,IAAAC,GAA+BC,EAAAA,EAAAA,YAAWT,EAAc,CACtDvD,MAAO8D,EAAMG,cAAgB,GAC7BJ,WAAW,EACX5D,QAAS6D,EAAMI,eAAgB,IAC/BC,GAAA/D,EAAAA,EAAAA,GAAA2D,EAAA,GAJKK,EAAUD,EAAA,GAAEE,EAAQF,EAAA,GAMnBvB,EAAgBkB,EAAhBlB,GAAIO,EAAYW,EAAZX,QACJnD,EAAmBoE,EAAnBpE,MAAOC,EAAYmE,EAAZnE,SAEfqE,EAAAA,EAAAA,YAAU,WACRnB,EAAQP,EAAI5C,EAAOC,EACrB,GAAG,CAAC2C,EAAI5C,EAAOC,EAASkD,IAExB,IAAMoB,EAAgB,SAAA1D,GACpBwD,EAAS,CACPvB,KAAM,SACNa,IAAK9C,EAAM2D,OAAOxE,MAClBgD,WAAYc,EAAMd,YAEtB,EAEMyB,EAAe,WACnBJ,EAAS,CACPvB,KAAM,SAEV,EAEMD,EACc,UAAlBiB,EAAMjB,SACJT,EAAAA,EAAAA,KAAA,SACEQ,GAAIkB,EAAMlB,GACVE,KAAMgB,EAAMhB,KACZ4B,YAAaZ,EAAMY,YACnBC,SAAUJ,EACVK,OAAQH,EACRzE,MAAOoE,EAAWpE,SAGpBoC,EAAAA,EAAAA,KAAA,YACEQ,GAAIkB,EAAMlB,GACViC,KAAMf,EAAMe,MAAQ,EACpBF,SAAUJ,EACVK,OAAQH,EACRzE,MAAOoE,EAAWpE,QAIxB,OACEiC,EAAAA,EAAAA,MAAA,OACEM,UAAS,gBAAAb,QAAmB0C,EAAWnE,SAAWmE,EAAWP,WAC3D,yBAA0B1B,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,SAAO0C,QAAShB,EAAMlB,GAAGT,SAAE2B,EAAMf,QAChCF,GACCuB,EAAWnE,SAAWmE,EAAWP,YAAazB,EAAAA,EAAAA,KAAA,KAAAD,SAAI2B,EAAMZ,cAGhE,C,6FChFM6B,EAAc,SAACvB,EAAOC,GACxB,OAAQA,EAAOX,MACX,IAAK,eACD,IAAIkC,GAAc,EAClB,IAAK,IAAMC,KAAWzB,EAAMlC,OACnBkC,EAAMlC,OAAO2D,KAIdD,EADAC,IAAYxB,EAAOwB,QACLD,GAAevB,EAAOxD,QAEtB+E,GAAexB,EAAMlC,OAAO2D,GAAShF,SAG3D,OAAAyD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOF,GAAK,IACRlC,QAAMoC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCF,EAAMlC,QAAM,IAAA4D,EAAAA,EAAAA,GAAA,GACdzB,EAAOwB,QAAU,CAAEjF,MAAOyD,EAAOzD,MAAOC,QAASwD,EAAOxD,WAE7DA,QAAS+E,IAGjB,IAAK,WACD,MAAO,CACH1D,OAAQmC,EAAOnC,OACfrB,QAASwD,EAAOuB,aAGxB,QACI,OAAOxB,EAEnB,EAEa1D,EAAU,SAACqF,EAAeC,GACnC,IAAArB,GAA8BC,EAAAA,EAAAA,YAAWe,EAAa,CAClDzD,OAAQ6D,EACRlF,QAASmF,IACXjB,GAAA/D,EAAAA,EAAAA,GAAA2D,EAAA,GAHK1D,EAAS8D,EAAA,GAAEE,EAAQF,EAAA,GAwB1B,MAAO,CAAC9D,GAlBagF,EAAAA,EAAAA,cAAY,SAACzC,EAAI5C,EAAOC,GACzCoE,EAAS,CACLvB,KAAM,eACN9C,MAAOA,EACPC,QAASA,EACTgF,QAASrC,GAEjB,GAAG,KAGiByC,EAAAA,EAAAA,cAAY,SAACC,EAAWC,GACxClB,EAAS,CACLvB,KAAM,WACNxB,OAAQgE,EACRN,YAAaO,GAErB,GAAG,IAGP,C,4IC9DA,IAAMC,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAGhB1C,EAAoB,WAAH,MAAU,CAAEH,KAAM0C,EAAwB,EAE3DpC,EAAsB,SAAAO,GAAG,MAAK,CACzCb,KAAM2C,EACN9B,IAAKA,EACN,EAOYiC,EAAkB,WAAH,MAAU,CAAE9C,KAAM6C,EAAsB,EAEvD/B,EAAW,SAAC5D,EAAOgD,GAC9B,IACkC6C,EAD9B5F,GAAU,EAAK6F,ECtBN,SAAoCC,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAClE,IAAKE,EAAI,CACP,GAAIG,MAAMC,QAAQN,KAAOE,GAAK,EAAAK,EAAA,GAA2BP,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEQ,OAAqB,CAC/GN,IAAIF,EAAIE,GACZ,IAAIO,EAAI,EACJC,EAAI,WAAc,EACtB,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKT,EAAEQ,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACN5G,MAAO+F,EAAES,KAEb,EACAK,EAAG,SAAWC,GACZ,MAAMA,CACR,EACAC,EAAGN,EAEP,CACA,MAAM,IAAIO,UAAU,wIACtB,CACA,IAEEC,EAFEC,GAAmB,EACrBC,GAAS,EAEX,MAAO,CACLT,EAAG,WACDT,EAAKA,EAAGmB,KAAKrB,EACf,EACAY,EAAG,WACD,IAAIU,EAAOpB,EAAGhF,OAEd,OADAiG,EAAmBG,EAAKT,KACjBS,CACT,EACAR,EAAG,SAAWS,GACZH,GAAS,EACTF,EAAMK,CACR,EACAP,EAAG,WACD,IACOG,GAAoC,MAAhBjB,EAAW,QAAWA,EAAW,QAC5D,CAAE,QACA,GAAIkB,EAAQ,MAAMF,CACpB,CACF,EAEJ,CD5BqBM,CACKvE,GAAU,IAAlC,IAAA8C,EAAAY,MAAAb,EAAAC,EAAAa,KAAAC,MAAoC,CAAC,IAA1BY,EAAS3B,EAAA7F,MACdwH,EAAU1E,OAAS0C,IACrBvF,EAAUA,GAAWD,EAAMyH,OAAOlB,OAAS,GAEzCiB,EAAU1E,OAAS2C,IACrBxF,EAAUA,GAAWD,EAAMyH,OAAOlB,QAAUiB,EAAU7D,KAEpD6D,EAAU1E,OAAS4C,IACrBzF,EAAUA,GAAWD,EAAMyH,OAAOlB,QAAUiB,EAAU7D,KA7BjC,QA+BnB6D,EAAU1E,OACZ7C,EAAUA,IAAYD,GAASwH,EAAU7D,KA/BpB,QAiCnB6D,EAAU1E,OACZ7C,EAAUA,IAAYD,GAASwH,EAAU7D,KAEvC6D,EAAU1E,OAAS6C,IACrB1F,EAAUA,GAAW,iBAAiByH,KAAK1H,GAE/C,CAAC,OAAAiH,GAAAnB,EAAAe,EAAAI,EAAA,SAAAnB,EAAAiB,GAAA,CACD,OAAO9G,CACT,C","sources":["docs/pages/NewDoc.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\r\nimport './NewDoc.css';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\n\r\nconst NewDoc = () => {\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const { sendRequest, error, loading, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const docSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + '/docs',\r\n        'POST',\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + auth.token\r\n        }\r\n      );\r\n\r\n      history.push(`/${auth.userId}/docs`);\r\n    } catch (err) {\r\n      // Handle error if necessary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"doc-form\" onSubmit={docSubmitHandler}>\r\n        {loading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD DOCS\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewDoc;\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if (!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            };\r\n\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    // Function to handle input changes\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id\r\n        });\r\n    }, []);\r\n\r\n    // Function to set form data\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        });\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","history","useHistory","_useHttpClient","useHttpClient","sendRequest","error","loading","clearError","_useForm","useForm","title","value","isValid","description","_useForm2","_slicedToArray","formState","inputHandler","docSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","preventDefault","process","JSON","stringify","inputs","Authorization","token","push","concat","userId","t0","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","Button","disabled","inputReducer","state","action","_objectSpread","val","validate","isTouched","props","_useReducer","useReducer","initialValue","initialValid","_useReducer2","inputState","dispatch","useEffect","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","formReducer","formIsValid","inputId","_defineProperty","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","_step","_iterator","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","_e2","_createForOfIteratorHelper","validator","trim","test"],"sourceRoot":""}