{"version":3,"file":"static/js/969.d15b3037.chunk.js","mappings":"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","sources":["docs/components/DocItem.js","docs/components/DocsList.js","docs/pages/UserDocs.js","shared/components/UIElements/Card.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './DocItem.css';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\nconst DocItem = (props) => {\r\n  const { loading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const closeDeleteWarningHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/docs/${props.id}`,\r\n        'DELETE',\r\n        null,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n\r\n      \r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"doc-item__modal-content\"\r\n        footerClass=\"place-item__modal-content\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <h2>The Map!</h2>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={closeDeleteWarningHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"doc-item__modal-actions\"\r\n        footer={\r\n          <>\r\n            <Button inverse onClick={closeDeleteWarningHandler}>\r\n              Cancel\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              Delete\r\n            </Button>\r\n          </>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this doc? Please note that it can't\r\n          be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n\r\n      <li className=\"doc-item\">\r\n        {loading && <LoadingSpinner asOverlay />}\r\n        <Card className=\"doc-item__content\">\r\n          {/* <div className=\"doc-item__image\">\r\n            <img src={props.image} alt={props.title} />\r\n          </div> */}\r\n          <div className=\"doc-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"doc-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <>\r\n                <Button to={`/docs/${props.id}`}>EDIT</Button>\r\n                <Button danger onClick={showDeleteWarningHandler}>\r\n                  DELETE\r\n                </Button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DocItem;\r\n","import React from 'react';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport DocItem from './DocItem';\r\nimport './DocsList.css';\r\n\r\nconst DocsList = (props) => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className=\"doc-list center\">\r\n                <Card>\r\n                    <h2>No docs found. Maybe create one</h2>\r\n                    <Button to=\"/docs/new\">Share Doc.</Button>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ul className=\"doc-list\">\r\n            {props.items.map(doc => (\r\n                <DocItem\r\n                    key={doc.id}\r\n                    id={doc.id}\r\n                    image={doc.imageUrl}\r\n                    title={doc.title}\r\n                    description={doc.description}\r\n                    creatorId={doc.creator}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default DocsList;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport DocsList from '../components/DocsList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst UserDocs = () => {\r\n    const [loadedDocs, setLoadedDocs] = useState();\r\n    const { loading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    // Get the userId from the URL parameters using the useParams hook from React Router\r\n    const userId = useParams().userId;\r\n\r\n    useEffect(() => {\r\n        const fetchDocs = async () => {\r\n            try {\r\n                // Fetch user docs using the userId\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/docs/user/${userId}`\r\n                );\r\n                setLoadedDocs(responseData.docs);\r\n            } catch (err) { }\r\n        };\r\n        fetchDocs();\r\n    }, [sendRequest, userId]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {loading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                </div>\r\n            )}\r\n            {!loading && loadedDocs && <DocsList items={loadedDocs} />}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserDocs;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"names":["props","_useHttpClient","useHttpClient","loading","error","sendRequest","clearError","auth","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","showMap","setShowMap","_useState3","_useState4","showConfirmModal","setShowConfirmModal","closeMapHandler","closeDeleteWarningHandler","confirmDeleteHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","concat","process","id","Authorization","token","onDelete","t0","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","className","inverse","danger","LoadingSpinner","asOverlay","Card","title","description","userId","creatorId","to","items","length","map","doc","DocItem","image","imageUrl","creator","loadedDocs","setLoadedDocs","useParams","useEffect","fetchDocs","responseData","sent","docs","DocsList","style"],"sourceRoot":""}